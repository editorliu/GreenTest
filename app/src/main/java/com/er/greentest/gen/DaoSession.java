package com.er.greentest.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.er.greentest.entity.Computer;
import com.er.greentest.entity.convert.ConvertSource;
import com.er.greentest.entity.Desk;
import com.er.greentest.entity.join.Company;
import com.er.greentest.entity.join.Staff;
import com.er.greentest.entity.one.Score;
import com.er.greentest.entity.one.Student;
import com.er.greentest.entity.Phone;
import com.er.greentest.entity.Road;
import com.er.greentest.entity.Room;
import com.er.greentest.entity.T;
import com.er.greentest.entity.Teacher;
import com.er.greentest.entity.tomany.Comment;
import com.er.greentest.entity.tomany.Customer;
import com.er.greentest.entity.User;

import com.er.greentest.gen.ComputerDao;
import com.er.greentest.gen.ConvertSourceDao;
import com.er.greentest.gen.DeskDao;
import com.er.greentest.gen.CompanyDao;
import com.er.greentest.gen.StaffDao;
import com.er.greentest.gen.ScoreDao;
import com.er.greentest.gen.StudentDao;
import com.er.greentest.gen.PhoneDao;
import com.er.greentest.gen.RoadDao;
import com.er.greentest.gen.RoomDao;
import com.er.greentest.gen.TDao;
import com.er.greentest.gen.TeacherDao;
import com.er.greentest.gen.CommentDao;
import com.er.greentest.gen.CustomerDao;
import com.er.greentest.gen.UserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig computerDaoConfig;
    private final DaoConfig convertSourceDaoConfig;
    private final DaoConfig deskDaoConfig;
    private final DaoConfig companyDaoConfig;
    private final DaoConfig staffDaoConfig;
    private final DaoConfig scoreDaoConfig;
    private final DaoConfig studentDaoConfig;
    private final DaoConfig phoneDaoConfig;
    private final DaoConfig roadDaoConfig;
    private final DaoConfig roomDaoConfig;
    private final DaoConfig tDaoConfig;
    private final DaoConfig teacherDaoConfig;
    private final DaoConfig commentDaoConfig;
    private final DaoConfig customerDaoConfig;
    private final DaoConfig userDaoConfig;

    private final ComputerDao computerDao;
    private final ConvertSourceDao convertSourceDao;
    private final DeskDao deskDao;
    private final CompanyDao companyDao;
    private final StaffDao staffDao;
    private final ScoreDao scoreDao;
    private final StudentDao studentDao;
    private final PhoneDao phoneDao;
    private final RoadDao roadDao;
    private final RoomDao roomDao;
    private final TDao tDao;
    private final TeacherDao teacherDao;
    private final CommentDao commentDao;
    private final CustomerDao customerDao;
    private final UserDao userDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        computerDaoConfig = daoConfigMap.get(ComputerDao.class).clone();
        computerDaoConfig.initIdentityScope(type);

        convertSourceDaoConfig = daoConfigMap.get(ConvertSourceDao.class).clone();
        convertSourceDaoConfig.initIdentityScope(type);

        deskDaoConfig = daoConfigMap.get(DeskDao.class).clone();
        deskDaoConfig.initIdentityScope(type);

        companyDaoConfig = daoConfigMap.get(CompanyDao.class).clone();
        companyDaoConfig.initIdentityScope(type);

        staffDaoConfig = daoConfigMap.get(StaffDao.class).clone();
        staffDaoConfig.initIdentityScope(type);

        scoreDaoConfig = daoConfigMap.get(ScoreDao.class).clone();
        scoreDaoConfig.initIdentityScope(type);

        studentDaoConfig = daoConfigMap.get(StudentDao.class).clone();
        studentDaoConfig.initIdentityScope(type);

        phoneDaoConfig = daoConfigMap.get(PhoneDao.class).clone();
        phoneDaoConfig.initIdentityScope(type);

        roadDaoConfig = daoConfigMap.get(RoadDao.class).clone();
        roadDaoConfig.initIdentityScope(type);

        roomDaoConfig = daoConfigMap.get(RoomDao.class).clone();
        roomDaoConfig.initIdentityScope(type);

        tDaoConfig = daoConfigMap.get(TDao.class).clone();
        tDaoConfig.initIdentityScope(type);

        teacherDaoConfig = daoConfigMap.get(TeacherDao.class).clone();
        teacherDaoConfig.initIdentityScope(type);

        commentDaoConfig = daoConfigMap.get(CommentDao.class).clone();
        commentDaoConfig.initIdentityScope(type);

        customerDaoConfig = daoConfigMap.get(CustomerDao.class).clone();
        customerDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        computerDao = new ComputerDao(computerDaoConfig, this);
        convertSourceDao = new ConvertSourceDao(convertSourceDaoConfig, this);
        deskDao = new DeskDao(deskDaoConfig, this);
        companyDao = new CompanyDao(companyDaoConfig, this);
        staffDao = new StaffDao(staffDaoConfig, this);
        scoreDao = new ScoreDao(scoreDaoConfig, this);
        studentDao = new StudentDao(studentDaoConfig, this);
        phoneDao = new PhoneDao(phoneDaoConfig, this);
        roadDao = new RoadDao(roadDaoConfig, this);
        roomDao = new RoomDao(roomDaoConfig, this);
        tDao = new TDao(tDaoConfig, this);
        teacherDao = new TeacherDao(teacherDaoConfig, this);
        commentDao = new CommentDao(commentDaoConfig, this);
        customerDao = new CustomerDao(customerDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(Computer.class, computerDao);
        registerDao(ConvertSource.class, convertSourceDao);
        registerDao(Desk.class, deskDao);
        registerDao(Company.class, companyDao);
        registerDao(Staff.class, staffDao);
        registerDao(Score.class, scoreDao);
        registerDao(Student.class, studentDao);
        registerDao(Phone.class, phoneDao);
        registerDao(Road.class, roadDao);
        registerDao(Room.class, roomDao);
        registerDao(T.class, tDao);
        registerDao(Teacher.class, teacherDao);
        registerDao(Comment.class, commentDao);
        registerDao(Customer.class, customerDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        computerDaoConfig.clearIdentityScope();
        convertSourceDaoConfig.clearIdentityScope();
        deskDaoConfig.clearIdentityScope();
        companyDaoConfig.clearIdentityScope();
        staffDaoConfig.clearIdentityScope();
        scoreDaoConfig.clearIdentityScope();
        studentDaoConfig.clearIdentityScope();
        phoneDaoConfig.clearIdentityScope();
        roadDaoConfig.clearIdentityScope();
        roomDaoConfig.clearIdentityScope();
        tDaoConfig.clearIdentityScope();
        teacherDaoConfig.clearIdentityScope();
        commentDaoConfig.clearIdentityScope();
        customerDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
    }

    public ComputerDao getComputerDao() {
        return computerDao;
    }

    public ConvertSourceDao getConvertSourceDao() {
        return convertSourceDao;
    }

    public DeskDao getDeskDao() {
        return deskDao;
    }

    public CompanyDao getCompanyDao() {
        return companyDao;
    }

    public StaffDao getStaffDao() {
        return staffDao;
    }

    public ScoreDao getScoreDao() {
        return scoreDao;
    }

    public StudentDao getStudentDao() {
        return studentDao;
    }

    public PhoneDao getPhoneDao() {
        return phoneDao;
    }

    public RoadDao getRoadDao() {
        return roadDao;
    }

    public RoomDao getRoomDao() {
        return roomDao;
    }

    public TDao getTDao() {
        return tDao;
    }

    public TeacherDao getTeacherDao() {
        return teacherDao;
    }

    public CommentDao getCommentDao() {
        return commentDao;
    }

    public CustomerDao getCustomerDao() {
        return customerDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
